package com.example.chatting_client;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.json.JSONArray;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class Login extends Activity {
	CheckId ckId;
	EditText txId;
	EditText txPass;
	Intent intent;
	Boolean flag =false;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);

		txId = (EditText) findViewById(R.id.txId);
		txPass = (EditText) findViewById(R.id.txPass);
		Button btLogin = (Button) findViewById(R.id.btLogin);
		ClickListener cl = new ClickListener();
		btLogin.setOnClickListener(cl);

	}

	class ClickListener implements Button.OnClickListener {
		@Override
		public void onClick(View v) {
			try {
				ckId = new CheckId();
				ckId.start();
				checkId();
				if(flag){
					intent = new Intent(Login.this,Chatting.class);
					startActivity(intent);					
					finish();
				}	
				else{
					Toast.makeText(Login.this, "Wrong ID or PassWord", Toast.LENGTH_LONG).show();
				}
				ckId.stop();
				ckId.destroy();				
				} catch (Exception e) {
				// TODO: handle exception
			}
		}
	}
	
	class CheckId extends Thread {
		String checked;

		public void run() {
			StringBuilder html = new StringBuilder();
			try {
				HttpURLConnection conn = (HttpURLConnection) new URL(
						"http://192.168.1.113/login.txt").openConnection();
				if (conn != null) {
					conn.setConnectTimeout(10000);
					conn.setUseCaches(false);
					if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) {
						BufferedReader br = new BufferedReader(
								new InputStreamReader(conn.getInputStream()));
						String line = br.readLine();
						if (line == null) {
							return;
						}
						html.append(line + '\n');
						while (true) {
							line = br.readLine();
							if (line == null) {
								break;
							}
							html.append(line + '\n');
						}
						br.close();
					}
					conn.disconnect();
					checked = html.toString();
				}				
			} catch (Exception e) {
				// TODO: handle exception
			}				
		}
	}

	public void checkId() {
		String id;
		String pass;
		try {
			JSONArray ja = new JSONArray(ckId.checked);
			for (int i = 0; i < ja.length(); i++) {
				JSONObject order = ja.getJSONObject(i);
				id = order.getString("id");
				pass = order.getString("pass");
				if (id.equals(txId.getText().toString()) && pass.equals(txPass.getText().toString())) {
					Toast.makeText(Login.this, "LOGIN Seccess",	Toast.LENGTH_LONG).show();
					flag = true;
					break;
				}
			}	
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

}
